use assembly="System.IO.Compression.FileSystem, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
use assembly="System.IO.Compression, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
use namespace="System.IO"
use namespace="System.IO.Compression"
use namespace="System.Net"

#add-files target="compile"
    @{
        var baseDir = Directory.GetCurrentDirectory();
        var projects = new[] { "Microsoft.Framework.CodeGeneration.EntityFramework", "Microsoft.Framework.CodeGenerators.Mvc" };

        foreach (var projectName in projects)
        {
            var nupkgFiles = Directory
                .EnumerateFiles(Path.Combine(baseDir, "artifacts\\build"), projectName + ".*.nupkg", SearchOption.AllDirectories)
                .Where(name => !name.EndsWith("symbols.nupkg"));

            foreach (var nupkgFile in nupkgFiles)
            {
                using (var archive = ZipFile.Open(nupkgFile, ZipArchiveMode.Update))
                {
                    var projectFolder = Path.Combine(baseDir, "src", projectName);
                    var templatesFolder = Path.Combine(projectFolder, "Templates");

                    foreach (var templateFile in Directory.EnumerateFiles(templatesFolder, "*.cshtml", SearchOption.AllDirectories))
                    {
                        var relativePath = templateFile.Substring(projectFolder.Length + 1);
                        archive.CreateEntryFromFile(templateFile, relativePath);
                    }
                }
            }
        }
    }
