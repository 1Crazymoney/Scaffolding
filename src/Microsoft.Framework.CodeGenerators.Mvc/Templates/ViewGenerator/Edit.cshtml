@inherits Microsoft.Framework.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.Framework.CodeGeneration.EntityFramework
@@model @Model.ViewDataTypeName
@{
    if (Model.IsPartialView)
    {
@:
    }
    else if (Model.IsLayoutPageSelected)
    {
<text>
@@{
    ViewBag.Title = "@Model.ViewName";</text>
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
<h2>@Model.ViewName</h2>

    }
    else
    {

<text>
@@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@Model.ViewName</title>
</head>
<body>
</text>
        //    PushIndent("    ");
    }
    if (Model.ReferenceScriptLibraries && !Model.IsLayoutPageSelected)
    {
@:@@section Scripts {
    @:<script src="~/lib/jquery/dist/jquery.min.js"></script>
    @:<script src="~/lib/jquery-validation/jquery.validate.min.js"></script>
    @:<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
@:}
    }

@:<form asp-action="@Model.ViewName">
<text>
    <div class="form-horizontal">
        <h4>@Model.ViewDataTypeShortName</h4>
        <hr />
        <div asp-validation-summary="ValidationSummary.ModelOnly" class="text-danger" />
</text>
    foreach (PropertyMetadata property in Model.ModelMetadata.Properties)
    {
        if (property.Scaffold && !property.IsAssociation)
        {
            if (property.IsPrimaryKey)
            {
        @:<input type="hidden" asp-for="@property.PropertyName" />
            }
            else if (!property.IsReadOnly)
            {
        @:<div class="form-group">
                if (property.IsForeignKey)
                {
            @:<label asp-for="@property.PropertyName" class="control-label col-md-2">@GetAssociationName(property)</label>
                }
                else
                {
            @:<label asp-for="@property.PropertyName" class="control-label col-md-2" />
                }
            @:<div class="col-md-10">
                bool isCheckbox = property.TypeName.Equals("System.Boolean");
                if (property.IsForeignKey)
                {
                @:<select asp-for="@property.PropertyName" class="form-control" />
                @:<span asp-validation-for="@property.PropertyName" class="text-danger" />
                }
                else
                {
                    if (isCheckbox)
                    {
                @:<div class="checkbox">
                    //PushIndent("    ");
                    @:<input asp-for="@property.PropertyName" />
                    @:<span asp-validation-for="@property.PropertyName" class="text-danger" />
                @:</div>
                    }
                    else if (!property.IsEnum || !property.IsEnumFlags)
                    {
                @:<input asp-for="@property.PropertyName" class="form-control" />
                @:<span asp-validation-for="@property.PropertyName" class="text-danger" />
                    }
                }
            @:</div>
        @:</div>
            }
        }
    }
}
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>
@{
    if (Model.IsLayoutPageSelected && Model.ReferenceScriptLibraries)
    {
@:@@section Scripts {
    @:<script src="~/lib/jquery/dist/jquery.min.js"></script>
    @:<script src="~/lib/jquery-validation/jquery.validate.min.js"></script>
    @:<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
@:}
    }
    // The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
@:</body>
@:</html>
    }
}
@functions
{
    string GetAssociationName(PropertyMetadata property)
    {
        //Todo: Implement properly.
        return property.PropertyName;
    }
}
